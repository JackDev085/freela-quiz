[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "api.asgi",
        "description": "api.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "api.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'django-insecure-=cldztbc4jg&xl0!x673!*v2_=p$$eu)=7*f#d0#zs$44xx-h^'\nDEBUG = True\nALLOWED_HOSTS = [\"*\",\".vercel.app\"]\nCSRF_TRUSTED_ORIGINS = ['https://localhost:8000']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-=cldztbc4jg&xl0!x673!*v2_=p$$eu)=7*f#d0#zs$44xx-h^'\nDEBUG = True\nALLOWED_HOSTS = [\"*\",\".vercel.app\"]\nCSRF_TRUSTED_ORIGINS = ['https://localhost:8000']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\",\".vercel.app\"]\nCSRF_TRUSTED_ORIGINS = ['https://localhost:8000']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\",\".vercel.app\"]\nCSRF_TRUSTED_ORIGINS = ['https://localhost:8000']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = ['https://localhost:8000']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'quiz',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'quiz',\n]\nMIDDLEWARE = [",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'api.urls'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "ROOT_URLCONF = 'api.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "WSGI_APPLICATION = 'api.wsgi.app'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n# Note: Django modules for using databases are not support in serverless\n# environments like Vercel. You can use a database over HTTP, hosted elsewhere.\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-br'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nSTATIC_ROOT = BASE_DIR / 'static_files'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nSTATIC_ROOT = BASE_DIR / 'static_files'\n# Default primary key field type",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nSTATIC_ROOT = BASE_DIR / 'static_files'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nSTATIC_ROOT = BASE_DIR / 'static_files'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nSTATIC_ROOT = BASE_DIR / 'static_files'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'static_files'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('quiz.urls')),\n]+ static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "api.wsgi",
        "description": "api.wsgi",
        "peekOfCode": "app = get_wsgi_application()",
        "detail": "api.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "quiz.migrations.0001_initial",
        "description": "quiz.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Alternative',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('text', models.CharField(max_length=255)),",
        "detail": "quiz.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AlternativeInline",
        "kind": 6,
        "importPath": "quiz.admin",
        "description": "quiz.admin",
        "peekOfCode": "class AlternativeInline(admin.TabularInline):\n    model = Alternative\n    extra = 4  # Número de alternativas que queremos por padrão\nclass QuestionAdmin(admin.ModelAdmin):\n    inlines = [AlternativeInline]\nadmin.site.register(Quiz)\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Alternative)\nadmin.site.register(Answer)",
        "detail": "quiz.admin",
        "documentation": {}
    },
    {
        "label": "QuestionAdmin",
        "kind": 6,
        "importPath": "quiz.admin",
        "description": "quiz.admin",
        "peekOfCode": "class QuestionAdmin(admin.ModelAdmin):\n    inlines = [AlternativeInline]\nadmin.site.register(Quiz)\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Alternative)\nadmin.site.register(Answer)",
        "detail": "quiz.admin",
        "documentation": {}
    },
    {
        "label": "ExampleConfig",
        "kind": 6,
        "importPath": "quiz.apps",
        "description": "quiz.apps",
        "peekOfCode": "class ExampleConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'quiz'",
        "detail": "quiz.apps",
        "documentation": {}
    },
    {
        "label": "Quiz",
        "kind": 6,
        "importPath": "quiz.models",
        "description": "quiz.models",
        "peekOfCode": "class Quiz(models.Model):\n    title = models.CharField(max_length=255)\n    description = models.TextField(blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.title\nclass Question(models.Model):\n    quiz = models.ForeignKey(Quiz, related_name='questions', on_delete=models.CASCADE)\n    text = models.CharField(max_length=255)",
        "detail": "quiz.models",
        "documentation": {}
    },
    {
        "label": "Question",
        "kind": 6,
        "importPath": "quiz.models",
        "description": "quiz.models",
        "peekOfCode": "class Question(models.Model):\n    quiz = models.ForeignKey(Quiz, related_name='questions', on_delete=models.CASCADE)\n    text = models.CharField(max_length=255)\n    img_link = models.TextField(blank=True, null=True)\n    def __str__(self):\n        return self.text\nclass Alternative(models.Model):\n    question = models.ForeignKey(Question, related_name='alternatives', on_delete=models.CASCADE)\n    text = models.CharField(max_length=255)\n    is_correct = models.BooleanField(default=False)",
        "detail": "quiz.models",
        "documentation": {}
    },
    {
        "label": "Alternative",
        "kind": 6,
        "importPath": "quiz.models",
        "description": "quiz.models",
        "peekOfCode": "class Alternative(models.Model):\n    question = models.ForeignKey(Question, related_name='alternatives', on_delete=models.CASCADE)\n    text = models.CharField(max_length=255)\n    is_correct = models.BooleanField(default=False)\n    def __str__(self):\n        return self.text\nclass Answer(models.Model):\n    question = models.ForeignKey(Question, related_name='answers', on_delete=models.CASCADE)\n    alternative = models.ForeignKey(Alternative, related_name='answers', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "quiz.models",
        "documentation": {}
    },
    {
        "label": "Answer",
        "kind": 6,
        "importPath": "quiz.models",
        "description": "quiz.models",
        "peekOfCode": "class Answer(models.Model):\n    question = models.ForeignKey(Question, related_name='answers', on_delete=models.CASCADE)\n    alternative = models.ForeignKey(Alternative, related_name='answers', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"Answer to {self.question.text}: {self.alternative.text}\"",
        "detail": "quiz.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "quiz.urls",
        "description": "quiz.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.login_view, name='login'),\n    path(\"quiz\", views.redir, name=\"redirect\"),\n    path('quiz/<int:id>/', views.quiz_view, name='quiz'),\n    path('quiz_submit/<int:id>/', views.quiz_submit, name='submit'),\n    path(\"saudacao\", views.saudacao,name=\"saudacao\"),\n    path('mario',views.mario,name='mario'),\n    path('premio',views.premio,name='premio'),\n]",
        "detail": "quiz.urls",
        "documentation": {}
    },
    {
        "label": "redir",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def redir(request):\n    return redirect(\"quiz\",1)\ndef login_view(request):\n    if request.method == \"POST\":\n        apelido = request.POST.get(\"jogo\")\n        if str(apelido).lower() == \"sophie\":\n            return redirect(reverse('saudacao'))\n        else:\n            messages.error(request, \"Digite a palavra certa. Tente novamente.\")\n            return redirect(reverse('login'))",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "login_view",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def login_view(request):\n    if request.method == \"POST\":\n        apelido = request.POST.get(\"jogo\")\n        if str(apelido).lower() == \"sophie\":\n            return redirect(reverse('saudacao'))\n        else:\n            messages.error(request, \"Digite a palavra certa. Tente novamente.\")\n            return redirect(reverse('login'))\n    return render(request, \"pages/index.html\")\ndef quiz_view(request, id):",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "quiz_view",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def quiz_view(request, id):\n    if id == 11:\n        return redirect('mario')\n    quiz_question = get_object_or_404(Question, pk=id)\n    quiz_alternatives = quiz_question.alternatives.all()\n    return render(request, 'pages/quiz.html', {'quiz': quiz_question,\"id\":id,'alternatives': quiz_alternatives})\ndef quiz_submit(request, id):\n    if request.method == \"POST\":\n        alternativa_correta = Alternative.objects.filter(question=id, is_correct=True).first()\n        alternativa_enviada = request.POST.get('resposta')",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "quiz_submit",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def quiz_submit(request, id):\n    if request.method == \"POST\":\n        alternativa_correta = Alternative.objects.filter(question=id, is_correct=True).first()\n        alternativa_enviada = request.POST.get('resposta')\n        print(alternativa_correta, alternativa_enviada)\n        if str(alternativa_correta) == str(alternativa_enviada):\n            return redirect('quiz', id+1)\n        else:\n           messages.error(request, \"Você errou!\")\n           return redirect('quiz', 1)",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "saudacao",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def saudacao(request):\n    return render(request, 'pages/saudacao.html')\ndef mario(request):\n    return render(request, 'pages/mario.html')\ndef premio(request):\n    return render(request, 'pages/premio.html')",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "mario",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def mario(request):\n    return render(request, 'pages/mario.html')\ndef premio(request):\n    return render(request, 'pages/premio.html')",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "premio",
        "kind": 2,
        "importPath": "quiz.views",
        "description": "quiz.views",
        "peekOfCode": "def premio(request):\n    return render(request, 'pages/premio.html')",
        "detail": "quiz.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'api.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]